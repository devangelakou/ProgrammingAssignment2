## This is a markdown file
x=11
print(x)
print(X)
y <-9
y
ls()
seq(from=2, to=7, by=2)
rep(1, times=10)
rep("desi", times=10)
rep(1:4, times=10)
matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 8), nrow=3, byrow=TRUE)
matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 8), nrow=3, byrow=False)
matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 8), nrow=3, byrow=FALSE)
mat = matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 8), nrow=3, byrow=TRUE)
mat[1,2]
mat[c(1,2)]
mat[c(2,2)]
help(read.csv)
?read.csv
data1 <- read.csv(file.choose(), header=T)
data1
data2 <- read.table(file.choose(), header=T, sep=",")
data2
data2 <- read.table(file.choose(), header=T, sep=",")
data2
?read.delim()
?read.delim
data1 <- read.csv(file.choose(), header=T)
data1
data1 <- read.csv(file.choose(), header=T)
data1
LungCapData_CSV <- read.csv("~/R/MarinStatsLectures/LungCapData_CSV.csv")
View(LungCapData_CSV)
summary(data1)
install.packages("slidify")
install.packages("ggplot2")
library(slidify)
library(ggplot2)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
ls
x <- data.frame(foo = 1
:
4
, bar = c(
T
,
T
,
F
,
F
))
x
x <- data.frame(foo = 1:4, bar = c(T,T,F,F))
x
x <- factor(c('yes', 'no', 'no','no','no','yes'))
x
table(x)
unclass(x)
x <- factor(c('yes', 'no', 'no','no','no','yes'), levels = c("yes", "no"))
x\
x
read.csv()
read.csv("C:\Users\poiniw\Documents\R\Coursera\Rprogramming\1week_exe\rprog_data_quiz1_data/hw1_data.csv")
read.csv('C:\Users\poiniw\Documents\R\Coursera\Rprogramming\1week_exe\rprog_data_quiz1_data/hw1_data.csv')
?read.csv
read.csv(C:\Users\poiniw\Documents\R\Coursera\Rprogramming\1week_exe\rprog_data_quiz1_data/hw1_data.csv)
read.csv(Users\poiniw\Documents\R\Coursera\Rprogramming\1week_exe\rprog_data_quiz1_data/hw1_data.csv)
read.csv(file.choose(),header=T,sep=",")
data_week1 <- read.csv(file.choose(),header=T,sep=",")
names(data_week1)
head(data_week1)
tail(data_week1)
data_week1[c(1,47)]
data_week1(1,47)
data_week1[1,47]
data_week1[[1,47]
data_week1[[1,47]]
data_week1[[1,47]]
data_week1$Ozone[47]
bad_Ozone <- is.na(data_week1$Ozone)
bad_Ozone
x <- bad_Ozone=T
?is.na
is.na(data_week1$Ozone)
xx <- data_week1$Ozone[!bad_Ozone]
xx
153-116
mean_xx <- mean(data_week1$Ozone[!bad_Ozone])
mean_xx
Oz31_Temp90 <- data_week1["Ozone>31", "Temp>90"]
Oz31_Temp90
Oz31_Temp90[data_week1("Ozone>31", "Temp>90")]
Oz31_Temp90 <- data_week1$Ozone>31 & data_week1$Temp>90
Oz31_Temp90
mean_solarR <- mean(data_week1$Solar.R)
mean_solarR
mean_solarR <- mean(data_week1$Solar.R[Oz31_Temp90])
mean_solarR
mean_solarR <- mean(data_week1$Solar.R[data_week1$Ozone>31 & data_week1$Temp>90], na.rm=TRUE )
mean_solarR
mean_solarR <- mean(data_week1$Solar.R[Oz31_Temp90], na.rm=TRUE )
mean_solarR
mean_temp <- mean(data_week1$Temp[])
mon_6 <- data_week1$Month[6]
mon_6
mean_temp <- mean(data_week1$Temp[mon_6])
mean_temp
mon_6 <- data_week1$Month ==6
mon_6
mon_6 <- data_week1$Month[[6]]
mon_6
View(data_week1)
mean(data_week1$Month)
mean(data_week1$Month==6)
summary(data_week1)
mon_6<- data_week1$Month==6
mon_6
attach(data_week1)
Month(6)
Month[6]
mean(Month[6])
Month
Month[Month=6]
Month[Month<6]
Month[Month>6]
Month[Month==6]
mon_6<-Month[Month==6]
mon_6
mean_temp <- mean(Temp[mon_6])
mean_temp
tempp<-Temp[mon_6]
tempp
tempp<-Temp[Month==6]
tempp
mean_temp <- mean(tempp)
mean_temp
mean_temp2 <- mean(Temp==mon_6)
max(Ozone[Month==5],is.na=T)
max(Ozone[Month==5],na.rm=T)
max(Ozone[Month==5])
detach(data_week1)
boo<-c(1:4)
foo<-c(2:3)
boo+foo
boo
foo
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
cbind(x, y)
x <- list(2, "a", "b", TRUE).
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x == 4] > 10
x[x > 10] == 4
x[x >= 11] <- 4
x
names(data_week1)
head(data_week1)
tail(data_week1)
attach(data_week1)
data_week1$Ozone[47]
bad_Ozone <- is.na(data_week1$Ozone)
xx <- data_week1$Ozone[!bad_Ozone]
xx
yy<-Ozone[bad_Ozone]
yy
mean_xx <- mean(Ozone[!bad_Ozone])
mean_xx
Oz31_Temp90 <- Ozone>31 & Temp>90
mean_solarR <- mean(Solar.R[Oz31_Temp90], na.rm=TRUE )
mean_solarR
mean_temp <- mean(Temp[Month==6])
mean_temp
max(Ozone[Month==5],na.rm=T)
rm=list(ls())
rm(list=ls())
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
noise <- function(n, mean, sd) {
+ rnorm(n, mean, sd)
+ }
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
noise(1:5, 1:5, 2)
mapply(noise, 1:5, 1:5, 2)
printmessage <- function(x){}
printmessage <- function(x){}
printmessage <- function(x){ if (x>0) print("x>0") else print("x<0") invisible(x) }
printmessage <- function(x){ if (x>0) print("x>0") else print("x<0") }
printmessage
printmessage <- function(x){ if (x>0) print("x>0") else print("x<0") invisible(x) }
getwd()
setwd("R\Coursera\Rprogramming\3week_exe")
setwd("R/Coursera/Rprogramming/3week_exe")
getwd()
list.dirs
list.files()
list.dirs()
list.files()
source("assignment2.R")
makeVector
cachemean(4)
source("cachematrix.R")
setwd("ProgrammingAssignment2")
source("cachematrix.R")
mean(x)
source("cachematrix.R")
mean(x)
traceback()
lm(y-x)
traceback()
browser()
debug(lm)
lm(y-x)
options(error = recover)
read.csv("nosuchfile")
library(datasets)
data(iris)
?iris
head(iris)
class(iris$Sepal.Length)
mean(iris$Sepal.Length[Species = virginica])
mean(iris$Sepal.Length[Species = "virginica"])
iris$Species
iris$Species[virginica]
iris$Species["virginica"]
iris$Species = "virginica"
iris$Species
View(iris)
iris$Species = "virginica"
library(datasets)
data(iris)
View(iris)
iris$Species
iris$Species["virginica"]
iris$Species[virginica]
iris$Species[,virginica]
which(iris$Species = virginica)
which(iris$Species %in% virginica)
class(iris)
iris[which(iris[,"Species"] %in% virginica)]
iris[c(Species = "virginica")]
iris[c(Species)]
iris[c("virginica")]
iris[c("Species")]
iris[c("Species") = "virginica"]
iris$Species %in% "virginica"
meanVirgin <- mean(iris$Sepal.Length[iris$Species %in% "virginica"])
meanVirgin
header(iris)
levels(iris)
levels("iris")
variable.names("iris")
iris
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
library(datasets)
data(mtcars)
?mtcars
names(mtcars)
?with
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars$cyl
mtcars$mpg
tapply(mtcars$cyl, mtcars$mpg, mean, simplify=T)
tapply(mtcars$cyl, mtcars$mpg, mean, simplify=F)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl %in%4, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl =4, mean)
tapply(mtcars$hp, mtcars$cyl %in%4, mean)
tapply(mtcars$hp, mtcars$cyl %in%4, mean, simplify=T)
tapply(mtcars$hp, mtcars$cyl %in%4, mean, simplify=F)
tapply(mtcars$hp, mtcars$cyl %in%4, mean)
apply(mtcars$hp, mtcars$cyl %in%4, mean)
apply(mtcars$hp, mtcars$cyl, mean, probs = c(mtcars$cyl%in%4))
apply(mtcars$hp,  mtcars$cyl, mean
)
apply(mtcars$hp,  mtcars$cyl%in%4, mean)
apply(mtcars$hp, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl[,1], mean)
tapply(mtcars$hp, mtcars$cyl %in%1, mean)
tapply(mtcars$hp, mtcars$cyl %in%2, mean)
tapply(mtcars$hp, mtcars$cyl %in%4, mean)
tapply(mtcars$hp, mtcars$cyl %in%8, mean)
tapply(mtcars$hp, mtcars$cyl %in%8, mean) -
tapply(mtcars$hp, mtcars$cyl %in%4, mean)
-209.21429
209.21429-209.21429
209.21429-82.63636
abs(tapply(mtcars$hp, mtcars$cyl %in%8, mean) -
tapply(mtcars$hp, mtcars$cyl %in%4, mean) )
debug(ls)
ls()
with(mtcars, tapply(mpg, cyl, mean))
0
debug
ls
exit
q
q
q
undebug(ls)
exit
